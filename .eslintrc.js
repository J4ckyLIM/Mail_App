module.exports = {
  env: {
    browser: true,
    es6: true,
    jest: true,
  },
  extends: [
    'airbnb-base',
    'plugin:import/errors',
    'plugin:@typescript-eslint/recommended',
    'prettier',
  ],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2018,
    sourceType: 'module',
    project: './tsconfig.json',
  },
  plugins: ['@typescript-eslint', 'json-format', 'prettier'],
  ignorePatterns: ['**/swagger.json'], // since all swagger.json spec files are generated by TSOA we can't keep the hand on the formating
  rules: {
    'no-use-before-define': 'off', // TODO: this needs to be set to error at some point, but fixing these all at once creates a lot of merge conflicts
    'no-param-reassign': 'error',
    radix: 'error',
    'default-case': 'off',
    'func-names': 'off',
    'global-require': 'off',
    'consistent-return': 'off',
    'class-methods-use-this': 'off',
    'no-unused-vars': 'off', // using @typescript-eslint/no-unused-vars
    camelcase: 'off',
    'no-shadow': 'off', // avoid a bug - read more here https://stackoverflow.com/questions/63961803/eslint-says-all-enums-in-typescript-app-are-already-declared-in-the-upper-scope
    'prettier/prettier': 'error',

    '@typescript-eslint/no-shadow': 'error',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/await-thenable': 'off',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-misused-promises': 'error',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/no-explicit-any': 'off', // TODO: this should be an error
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/indent': 'off', // TODO: this should be an error
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/switch-exhaustiveness-check': 'error',
    '@typescript-eslint/promise-function-async': [
      'error',
      {
        allowedPromiseNames: ['Thenable'],
        checkArrowFunctions: true,
        checkFunctionDeclarations: true,
        checkFunctionExpressions: true,
        checkMethodDeclarations: true,
      },
    ],

    'import/no-cycle': [
      'error',
      {
        maxDepth: 10,
        ignoreExternal: true,
      },
    ],
    'import/no-unresolved': 'error',
    'import/default': 'error',
    'import/named': 'error',
    'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    'import/order': [
      'error',
      {
        'newlines-between': 'always',
        pathGroups: [
          { pattern: 'greenly-shared', group: 'external', position: 'after' },
          { pattern: '@*/*', group: 'external' },
          { pattern: '..', group: 'sibling', position: 'after' },
        ],
        pathGroupsExcludedImportTypes: ['builtin'],
        groups: [
          ['builtin', 'external'],
          'internal',
          'parent',
          'sibling',
          'index',
        ],
      },
    ],
    'import/prefer-default-export': 'off',
  },
  overrides: [
    {
      files: ['*.test.ts', '*.test.tsx'],
      rules: {
        '@typescript-eslint/no-non-null-assertion': 'off',
      },
    },
  ],
  settings: {
    'import/resolver': {
      typescript: {
        paths: './tsconfig.json',
        alwaysTryTypes: true,
      },
    },
    'json/json-with-comments-files': ['.vscode/**'],
  },
};